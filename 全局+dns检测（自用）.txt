// 域名配置
const forceProxyDomains = [
    "DOMAIN-SUFFIX,local,DIRECT",
    "DOMAIN-SUFFIX,localhost,DIRECT",
    "IP-CIDR,127.0.0.0/8,DIRECT",
    "IP-CIDR,172.16.0.0/12,DIRECT",
    "IP-CIDR,192.168.0.0/16,DIRECT",
    "IP-CIDR,10.0.0.0/8,DIRECT",
    "IP-CIDR,17.0.0.0/8,DIRECT",
    "IP-CIDR,100.64.0.0/10,DIRECT",
    "IP-CIDR,224.0.0.0/4,DIRECT",
    "IP-CIDR6,fe80::/10,DIRECT",
    "DOMAIN-KEYWORD,pc528.net,DIRECT,no-resolve",
    // 进程规则
    "PROCESS-NAME,clash,DIRECT",
    "PROCESS-NAME,v2ray,DIRECT",
    "PROCESS-NAME,xray,DIRECT",
    "PROCESS-NAME,naive,DIRECT",
    "PROCESS-NAME,trojan,DIRECT",
    "PROCESS-NAME,trojan-go,DIRECT",
    "PROCESS-NAME,ss-local,DIRECT",
    "PROCESS-NAME,privoxy,DIRECT",
    "PROCESS-NAME,leaf,DIRECT",
    "PROCESS-NAME,Thunder,DIRECT",
    "PROCESS-NAME,DownloadService,DIRECT",
    "PROCESS-NAME,qBittorrent,DIRECT",
    "PROCESS-NAME,Transmission,DIRECT",
    "PROCESS-NAME,fdm,DIRECT",
    "PROCESS-NAME,aria2c,DIRECT",
    "PROCESS-NAME,Folx,DIRECT",
    "PROCESS-NAME,NetTransport,DIRECT",
    "PROCESS-NAME,uTorrent,DIRECT",
    "PROCESS-NAME,WebTorrent,DIRECT",
    "PROCESS-NAME,pikpak,DIRECT",
    "PROCESS-NAME,SwitchHosts,DIRECT",
    "PROCESS-NAME,xdm-app,DIRECT",
    "PROCESS-NAME,Motrix,DIRECT",
    "PROCESS-NAME,PixPin,DIRECT",
    "PROCESS-NAME,eCloud,DIRECT",
    "PROCESS-NAME,ProcessLasso,DIRECT",
    "PROCESS-NAME,WeChat,DIRECT"
];

// 规则集配置
const ruleConfig = [
   {
        name: "广告集合",
        group: "广告拦截",
        url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt",
        path: "./ruleset/reject.yaml"
    },
    {
        name: "直连列表",
        group: "国内直连",
        url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt",
        path: "./ruleset/direct.yaml"
    },
    {
        name: "直连补充列表",
        group: "国内直连",
        url: "https://raw.githubusercontent.com/toney871030/clash_verge/master/PCDIRECT.yaml",
        path: "./ruleset/PCDIRECT.yaml"
    },
    {
        name: "代理列表",
        group: "自动选择",
        url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt",
        path: "./ruleset/proxy.yaml"
    },
    {
        name: "代理补充列表",
        group: "自动选择",
        url: "https://raw.githubusercontent.com/toney871030/clash_verge/master/PCProxy.yaml",
        path: "./ruleset/PCProxy.yaml"
    }
];

// 常量定义
const MULTIPLIER_REGEX = /(?:[4-9](?:\.5)?x)/i;
const RULE_UPDATE_INTERVAL = 86400;
const TEST_URL = "https://www.gstatic.com/generate_204";
const TEST_INTERVAL = 300;
const TEST_TOLERANCE = 20;
const BALANCESTRATEGY = "sticky-sessions";

const DNS_CONFIG = {
    defaultDNS: ["tls://223.5.5.5:853", "tls://120.53.53.53:853"],
    cnDnsList: ["https://dns.alidns.com/dns-query#h3=true", "https://doh.pub/dns-query#h3=true"],
    proxyDnsList: ["https://dns.google/dns-query#h3=true", "https://cloudflare-dns.com/dns-query#h3=true", "quic://dns.adguard.com:784"]
};

const HIGH_QUALITY_KEYWORDS = [
    "家宽", "家庭宽带", "IEPL", "Iepl", "iepl",
    "IPLC", "iplc", "Iplc", "专线", "高速",
    "高级", "精品", "原生", "SVIP", "svip", 
    "Svip", "VIP", "vip", "Vip", "Premium", 
    "premium",
    "特殊", "特殊线路", "游戏", "Game", "game"
];

const HIGH_QUALITY_REGEX = new RegExp(HIGH_QUALITY_KEYWORDS.join("|"), "i");

function filterHighQualityProxies(proxies) {
    if (!proxies || !Array.isArray(proxies)) {
        return [];
    }

    const result = [];
    const regex = HIGH_QUALITY_REGEX;
    
    for (const proxy of proxies) {
        const proxyName = proxy.name || "";
        if (regex.test(proxyName)) {
            result.push(proxyName);
        }
    }
    
    return result;
}

async function updateDNSConfig() {
    const { defaultDNS, cnDnsList, proxyDnsList } = DNS_CONFIG;

    const isPrimaryDNSAvailable = await checkDNSAvailability(defaultDNS[0]);
    const isSecondaryDNSAvailable = await checkDNSAvailability(defaultDNS[1]);

    if (!isPrimaryDNSAvailable && !isSecondaryDNSAvailable) {
        console.log("主DNS和备DNS都不可用，切换到备用DNS");
        DNS_CONFIG.nameserver = proxyDnsList;
    } else {
        console.log("DNS状态正常");
        DNS_CONFIG.nameserver = cnDnsList;
    }
}

async function checkDNSAvailability(dns) {
    try {
        const response = await fetch(`https://dns.google/resolve?name=example.com&dns=${dns}`);
        return response.ok;
    } catch (error) {
        console.error(`检查 DNS ${dns} 时出错:`, error);
        return false;
    }
}

function main(config) {
    try {
        const newConfig = { ...config };
        
        newConfig.proxies = newConfig.proxies.filter(proxy => !MULTIPLIER_REGEX.test(proxy.name));
        const highQualityProxies = filterHighQualityProxies(newConfig.proxies);

        const proxyGroups = [
            {
                "name": "自动选择",
                "icon": "https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/speed.svg",
                "type": "url-test",
                "include-all": true,
                "url": TEST_URL,
                "interval": TEST_INTERVAL,
                "tolerance": TEST_TOLERANCE,
                "proxies": [...newConfig.proxies.map(p => p.name), ...highQualityProxies]
            },
            {
                "name": "负载均衡",
                "icon": "https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/speed.svg",
                "type": "load-balance",
                "include-all": true,
                "strategy": BALANCESTRATEGY,
                "url": TEST_URL,
                "interval": TEST_INTERVAL
            },
            {
                "name": "手动选择",
                "icon": "https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/speed.svg",
                "type": "select",
                "proxies": ["自动选择", "高质量节点", "DIRECT"]
            },
            {
                "name": "国内直连",
                "icon": "https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/speed.svg",
                "type": "select",
                "proxies": ["DIRECT"]
            },
            {
                "name": "广告拦截",
                "icon": "https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/ambulance.svg",
                "type": "select",
                "proxies": ["REJECT"]
            },
            {
                "name": "高质量节点",
                "icon": "https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/speed.svg",
                "type": "select",
                "proxies": ["自动选择", "负载均衡", "DIRECT", ...highQualityProxies]
            }
        ];

        const rules = [...forceProxyDomains];

        const ruleProviders = {};
        ruleConfig.forEach(({ name, url, group }) => {
            const providerKey = `${name.toLowerCase()}_rules`;
            ruleProviders[providerKey] = {
                "type": "http",
                "behavior": "domain",
                "url": url,
                "interval": RULE_UPDATE_INTERVAL,
                "path": `./rule-providers/${providerKey}.yaml`
            };
            rules.push(`RULE-SET,${providerKey},${group}`);
        });

        rules.push(
            "GEOSITE,geolocation-!cn,自动选择",
            "GEOSITE,gfw,自动选择",
            "GEOSITE,onedrive,国内直连",
            "GEOSITE,microsoft@cn,国内直连",
            "GEOSITE,steam@cn,国内直连",
            "GEOSITE,category-games@cn,国内直连",
            "GEOSITE,private,国内直连",
            "GEOSITE,cn,国内直连",
            "GEOIP,private,国内直连,no-resolve",
            "GEOIP,cn,国内直连",
            "GEOIP,telegram,自动选择",
            "GEOIP,netflix,自动选择",
            "GEOIP,cloudflare,自动选择",
            "GEOIP,cloudfront,自动选择",
            "GEOIP,facebook,自动选择",
            "GEOIP,fastly,自动选择",
            "GEOIP,google,自动选择",
            "GEOIP,twitter,自动选择",
            "GEOIP,tor,自动选择",
            "MATCH,高质量节点"
        );

        const globalConfig = {
    // 网络和代理配置
    "mixed-port": 7897,            // 混合端口：HTTP(S)和SOCKS5共用端口
    "geodata-mode": true,          // GEO模式：true使用geoip.dat数据库,false使用mmdb数据库
    "tcp-concurrent": true,        // TCP并发：允许并发连接TCP,提高并发性能
    "unified-delay": true,         // 统一延迟：统一显示节点延迟
    "allow-lan": true,             // 局域网连接：允许其他设备经过本机代理
    "bind-address": "*",           // 监听地址：*表示绑定所有IP地址
    "find-process-mode": "strict", // 进程匹配模式：strict严格,off关闭,always总是
    "ipv6": false,                // IPv6开关：是否启用IPv6支持

    // 运行模式(任选其一)
    "mode": "rule",                // rule:规则模式; global:全局模式; direct:直连模式

    // 日志等级(按详细程度排序)
    "log-level": "error",           // 日志等级设置: debug, info, warning, error, silent

    // 外部控制设置
    "external-controller": "0.0.0.0:9090",  // 外部控制器监听地址
    "external-ui": "folder",               // 外部控制器UI目录
    "secret": "",                        // 外部控制器密码

    //------------------------性能调优------------------------#
    "tcp-concurrent-users": 64,      // TCP并发连接数,建议值:16-128
    "keep-alive-interval": 15,       // 保活心跳间隔(秒),建议值:15-30
    "inbound-tfo": true,            // 入站TCP Fast Open
    "outbound-tfo": true,           // 出站TCP Fast Open

    // 网络接口名称: 根据操作系统和硬件选择
    "interface-name": "以太网",      // Windows中的有线网卡名称，macOS和Linux根据具体名称设置

    // 连接池配置
    "connection-pool-size": 256,     // 连接池大小,建议值:128-512
    "idle-timeout": 60,              // 空闲超时时间(秒)

    //------------------------TLS 配置------------------------#
    "tls": {
        "enable": true,               // 启用TLS支持
        "skip-cert-verify": false,    // 是否跳过证书验证
        "alpn": ["h2", "http/1.1"],   // 应用层协议协商
        "min-version": "1.2",         // 最低TLS版本
        "max-version": "1.3",         // 最高TLS版本
        "cipher-suites": [
            "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
            "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
        ],
        "global-client-fingerprint": "chrome", // 客户端指纹
        "geox-url": {
            "geoip": "https://ghfast.top/https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/geoip.dat",
            "geosite": "https://github.com/Loyalsoldier/domain-list-custom/releases/latest/download/geosite.dat",
            "mmdb": "https://ghfast.top/https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/Country.mmdb"
        }
    }
};

const dnsConfig = {
    "enable": true,                   // 启用 DNS 解析服务
    "listen": ":53",                  // DNS 监听端口
    "ipv6": true,                     // 启用 IPv6 支持
    "prefer-h3": true,                // 优先使用 HTTP/3
    "use-hosts": true,                // 使用本地 hosts 文件
    "use-system-hosts": true,         // 使用系统 hosts 文件
    "respect-rules": true,            // 遵循规则
    "enhanced-mode": "fake-ip",       // 启用假 IP 模式
    "fake-ip-range": "198.18.0.1/16", // 假 IP 范围
    "fake-ip-filter": [
        '+.lan', '+.local', '*.arpa', '+.stun.+', 'time.*.com', 'ntp.*.com',
        '*.msftncsi.com', 'www.msftconnecttest.com', 'localhost.ptlogin2.qq.com'
    ],
    "default-nameserver": DNS_CONFIG.defaultDNS, // 默认 DNS 服务器
    "nameserver": DNS_CONFIG.cnDnsList,          // 国内 DNS 列表
    "proxy-server-nameserver": DNS_CONFIG.proxyDnsList, // 代理服务器 DNS 列表
    "nameserver-policy": {
        "geosite:private,cn": DNS_CONFIG.cnDnsList,         // 国内私有 DNS
        "geosite:geolocation-!cn,gfw": DNS_CONFIG.proxyDnsList // 国外 DNS
    },
    "nameserver-policy-list": [
        // 为特定域名指定 DNS 服务器
        ["github.com", DNS_CONFIG.proxyDnsList],
        ["www.google.com", DNS_CONFIG.proxyDnsList],
        ["www.facebook.com", DNS_CONFIG.proxyDnsList],
        ["www.youtube.com", DNS_CONFIG.proxyDnsList],
        ["www.netflix.com", DNS_CONFIG.proxyDnsList],
        ["www.xvideos.com", DNS_CONFIG.proxyDnsList],
        ["pornhub.com", DNS_CONFIG.proxyDnsList],
        ["spankbang.com", DNS_CONFIG.proxyDnsList],
        ["krx18.com", DNS_CONFIG.proxyDnsList],
        ["wallhaven.cc", DNS_CONFIG.proxyDnsList],
        ["wallpaperswide.com", DNS_CONFIG.proxyDnsList],
        ["spotify.com", DNS_CONFIG.proxyDnsList],
        ["jinricp.niuc.net", DNS_CONFIG.proxyDnsList],
        ["sehuatang.net", DNS_CONFIG.proxyDnsList],
        ["oursogo.com", DNS_CONFIG.proxyDnsList],
        ["eyny.com", DNS_CONFIG.proxyDnsList],
        ["chatgpt.com", DNS_CONFIG.proxyDnsList],
        ["greasyfork.org", DNS_CONFIG.proxyDnsList],
        ["sleazyfork.org", DNS_CONFIG.proxyDnsList],
        ["linux.do", DNS_CONFIG.cnDnsList],
        ["www.52pojie.cn", DNS_CONFIG.cnDnsList],
        ["meta.appinn.net", DNS_CONFIG.cnDnsList],
        ["bbs.rainmeter.cn", DNS_CONFIG.cnDnsList],
        ["www.pc528.net", DNS_CONFIG.cnDnsList],
        ["www.winos.me", DNS_CONFIG.cnDnsList],
        ["www.cmdpe.com", DNS_CONFIG.cnDnsList],
        ["www.youxiaohou.com", DNS_CONFIG.cnDnsList],
        ["www.pcmoe.net", DNS_CONFIG.cnDnsList],
        ["bbs.3dmgame.com", DNS_CONFIG.cnDnsList],
        ["www.3jihome.com", DNS_CONFIG.cnDnsList],
        ["ddys.pro", DNS_CONFIG.cnDnsList],
        ["www.5wu7rv.shop", DNS_CONFIG.cnDnsList],
        ["v.ikanbot.com", DNS_CONFIG.cnDnsList],
        ["www.boju.cc", DNS_CONFIG.cnDnsList],
        ["www.agedm.org", DNS_CONFIG.cnDnsList],
        ["4fb.cn", DNS_CONFIG.cnDnsList],
        ["www.hybase.com", DNS_CONFIG.cnDnsList],
        ["masuit.net", DNS_CONFIG.cnDnsList],
        ["www.applnn.com", DNS_CONFIG.cnDnsList],
        ["haowallpaper.com", DNS_CONFIG.cnDnsList],
        [".cn", DNS_CONFIG.cnDnsList] // 为所有 .cn 域名指定国内 DNS
    ]
};

// 最终返回的配置对象
return {
    ...newConfig,
    ...globalConfig,
    "proxy-groups": proxyGroups,
    "rules": rules,
    "rule-providers": ruleProviders,
    "dns": dnsConfig
};

    } catch (error) {
        console.error('发生错误:', error);
        return config;
    }
}
