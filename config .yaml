# 机场订阅
proxy-providers:
  Nova加速:
    url: "http://38.207.177.31/api/v1/client/subscribe?token=7644909b02c60f79520eaeb61173ca31"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连
    
  免费公益节点 5小时更新一次:
    url: "https://substore.000000000.qzz.io/64701033-3b5e-ae47-1135-41f3ea0d3be2/api/file/mihomo"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连
    
  奶茶Cloud订阅:
    url: "https://st-sub.fly.dev/v2b/nc/api/v1/client/subscribe?token=acafad056ba1c685a15a117b4a784ec8&flag=clash"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

# 节点信息 # dialer-proxy: 香港手动
proxies:
  - {name: 直连, type: direct}
  
  - name: "美亚  WB+CDN-大漠孤狼李哥"
    type: vless
    server: 147.75.230.33
    port: 443
    uuid: 0265578d-2cbe-4ae8-bf62-87171d2b8b9c
    network: ws
    tls: true
    alpn: [h2, http/1.1]
    client-fingerprint: chrome
    ws-opts:
      path: /ws
      headers:
        Host: lucky.xiaoyaogpt.com
  
  - name: "CDN WB-建材批发王总"
    type: vless
    server: 162.159.129.243
    port: 2053
    uuid: 79446e84-5a11-4186-890d-6ebc64a94bed
    network: ws
    tls: true
    alpn: [h2, http/1.1]
    client-fingerprint: chrome
    ws-opts:
      path: /ws
      headers:
        Host: boss.xiaoyaogpt.com
  
  - name: "233boy-reality-165.232.149.143"
    type: vless
    server: 165.232.149.143
    port: 49961
    uuid: d109adf6-ec17-4cf8-b9bd-0b8625947fa6
    network: tcp
    tls: true
    servername: dash.cloudflare.com
    reality-opts:
      public-key: OLNgQ38IP5qqpjApzySpq7sEMCRXZ6aKbsow8NHQvQE
      short-id: ""
    client-fingerprint: chrome
    flow: xtls-rprx-vision
    
  - name: "233boy-reality-LL-HK"
    type: vless
    server: 45.207.157.139
    port: 13927
    uuid: 95d238d9-bd58-42e5-8029-f59fcc44774e
    network: tcp
    servername: dash.cloudflare.com
    tls: true
    encryption: none
    reality-opts:
      public-key: 8daVYt0JHvXDAxSRbhXX5Csv51KZk_gW5QzozIQFXUM
    client-fingerprint: chrome
    flow: xtls-rprx-vision
    
  - name: 233boy-reality-38.244.32.33
    type: vless
    server: 38.244.32.33
    port: 20147
    uuid: 2d0dfffb-2f6e-44c7-8e33-f1c7bb0e39d0
    network: tcp
    servername: aws.amazon.com
    tls: true
    encryption: none
    reality-opts:
      public-key: 4TpzGBCEilpbGh9z3cTM47bY4SpqXyLoGJvdfgpuWF8
    client-fingerprint: chrome
    flow: xtls-rprx-vision
  
  - name: 233boy-reality-38.76.148.9
    type: vless
    server: 38.76.148.9
    port: 35178
    uuid: 81f51388-67b1-44c7-beec-ccc6dba07e56
    network: tcp
    servername: www.ebay.com
    tls: true
    encryption: none
    reality-opts:
      public-key: 6lz-sdapSEubZS16kzRYpy97L150kl9nFNy-KtjvYm0
    client-fingerprint: chrome
    flow: xtls-rprx-vision
    
  - name: vl-reality-localhost
    type: vless
    server: 104.244.76.174
    port: 57735
    uuid: cf73ba63-6097-45b1-a1f2-7094307be1cb
    network: tcp
    servername: www.yahoo.com
    tls: true
    encryption: none
    reality-opts:
      public-key: 3FKbWYoh8yiaMbKYOLWe5I7pfdRzrrMHTVPgLMS1JAY
      short-id: f438822f
    client-fingerprint: chrome
    flow: xtls-rprx-vision

# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"
    
 # 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
 
# 出站策略
proxy-groups:
  - {name: 🚀 默认代理, type: select, proxies: [🔯 香港故转, 🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 📹 YouTube, type: select, proxies: [🔯 美国故转, 🔯 香港故转, 🔯 日本故转, 🔯 狮城故转, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 🍎 Apple, type: select, proxies: [🔯 美国故转, 🔯 香港故转, 🔯 日本故转, 🔯 狮城故转, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: ✈️ Speedtest, type: select, proxies: [🔯 美国故转, 🔯 香港故转, 🔯 日本故转, 🔯 狮城故转, ♻️ 美国自动, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 🍀 Google, type: select, proxies: [🔯 香港故转, 🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 🤖 ChatGPT, type: select, proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 👨🏿‍💻 GitHub, type: select, proxies: [🔯 香港故转, 🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 🐬 OneDrive, type: select, proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 🪟 Microsoft, type: select, proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 🎵 TikTok, type: select, proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 📲 Telegram, type: select, proxies: [🔯 香港故转, 🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 🎥 NETFLIX, type: select, proxies: [🔯 狮城故转, 🔯 香港故转, 🔯 日本故转, 🔯 美国故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 💶 PayPal, type: select, proxies: [🔯 日本故转, 🔯 香港故转, 🔯 狮城故转, 🔯 美国故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 🐟 漏网之鱼, type: select, proxies: [🚀 默认代理, 🔯 香港故转, 🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 🇭🇰 香港节点, type: select, include-all: true, filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇯🇵 日本节点, type: select, include-all: true, filter: "(?i)日|jp|japan"}
  - {name: 🇸🇬 狮城节点, type: select, include-all: true, filter: "(?i)新加坡|坡|狮城|SG|Singapore"}
  - {name: 🇺🇲 美国节点, type: select, include-all: true, filter: "(?i)美|us|unitedstates|united states"}
  - {name: 🔯 香港故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
  - {name: 🔯 日本故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$" }
  - {name: 🔯 狮城故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(台|日|韩|深|美)).)*$"}
  - {name: 🔯 美国故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|韩|新|日)).)*$" }
  - {name: ♻️ 香港自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
  - {name: ♻️ 日本自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$" }
  - {name: ♻️ 狮城自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(港|台|韩|日|美)).)*$" }
  - {name: ♻️ 美国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|日|韩|新)).)*$"}
  - {name: ♻️ 自动选择, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(直连)).)*$"}
  - {name: 🌐 全部节点, type: select, include-all: true}

# 规则匹配
rules:
  - DOMAIN-SUFFIX,qichiyu.com,🚀 默认代理
  - RULE-SET,pcdirect,直连
  - RULE-SET,ChinaMedia补充,直连
  - RULE-SET,吾爱破解Blog,直连
  - RULE-SET,不忘初心Blog,直连
  - RULE-SET,idm,直连
  - RULE-SET,xunlei,直连
  - RULE-SET,pcproxy,🚀 默认代理
  - RULE-SET,GlobalMedia补充,🚀 默认代理
  - RULE-SET,linux_do,🚀 默认代理
  - RULE-SET,Porn,🚀 默认代理
  - RULE-SET,Python,🚀 默认代理
  - RULE-SET,private_domain,直连
  - RULE-SET,neteasemusic_non_ip,直连
  - RULE-SET,neteasemusic_ip,直连
  - RULE-SET,Cloudflare_non_ip,直连
  - RULE-SET,Cloudflare_ip,直连
  - RULE-SET,apple_domain,🍎 Apple
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,microsoft_domain,🪟 Microsoft
  - RULE-SET,tiktok_domain,🎵 TikTok
  - RULE-SET,speedtest_domain,✈️ Speedtest
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,paypal_domain,💶 PayPal
  - RULE-SET,gfw_domain,🚀 默认代理
  - RULE-SET,geolocation-!cn,直连
  - RULE-SET,cn_domain,直连
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,netflix_ip,🎥 NETFLIX,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,lan_non_ip,直连
  - RULE-SET,lan_ip,直连
  - RULE-SET,cn_ip,直连
  - MATCH,🐟 漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  lan_non_ip: { <<: *class, url: "https://ruleset.skk.moe/Clash/non_ip/lan.txt"}
  lan_ip: { <<: *class, url: "https://ruleset.skk.moe/Clash/ip/lan.txt"}
  neteasemusic_non_ip: { <<: *class, url: "https://ruleset.skk.moe/Clash/non_ip/neteasemusic.txt"}
  neteasemusic_ip: { <<: *class, url: "https://ruleset.skk.moe/Clash/ip/neteasemusic.txt"}
  Cloudflare_non_ip: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/Cloudflare.txt"}
  Cloudflare_ip: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/Cloudflare_ip.txt"}
  ai: {  <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs" }
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  pcproxy: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/pcproxy.txt"}
  GlobalMedia补充: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/GlobalMedia补充.txt"}
  linux_do: { <<: *class, url: "https://ghfast.top/https://github.com/toney871030/clash_verge/blob/master/rule/linux.do.txt"}
  Porn: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/Porn.txt"}
  Python: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/Python.txt"}
  pcdirect: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/pcdirect.txt"}
  ChinaMedia补充: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/ChinaMedia补充.txt"}
  吾爱破解Blog: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/52pojie.txt"}
  不忘初心Blog: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/不忘初心Blog.txt"}
  idm: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/IDM.txt"}
  xunlei: { <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/toney871030/clash_verge/refs/heads/master/rule/Xunlei.txt"}
