// 域名配置
const forceProxyDomains = [
    "DOMAIN-SUFFIX,ip138.com,国内直连",
    "DOMAIN-SUFFIX,agedm.org,国内直连",
    "DOMAIN-SUFFIX,m.mubai.link,国内直连",
    "DOMAIN-SUFFIX,linux.do,国内直连",
    "DOMAIN-SUFFIX,hybase.com,国内直连",
    "DOMAIN-SUFFIX,masuit.net,国内直连",
    "DOMAIN-SUFFIX,4fb.cn,国内直连",
    "DOMAIN-SUFFIX,applnn.com,国内直连",
    "DOMAIN-SUFFIX,hifini.com,国内直连",
    "DOMAIN-SUFFIX,genspark.ai,自动选择",
    "DOMAIN-SUFFIX,wallhaven.cc,自动选择",
    "DOMAIN-SUFFIX,xvideos.com,自动选择",
    "DOMAIN-SUFFIX,pornhub.com,自动选择",
    "DOMAIN-SUFFIX,spankbang.com,自动选择",
    "DOMAIN-SUFFIX,sehuatang.net,自动选择",
    "DOMAIN-SUFFIX,krx18.com,自动选择",
    "DOMAIN-SUFFIX,chat.openai.com,自动选择",
    "DOMAIN-SUFFIX,music.ydev.tech/#/,自动选择",
    "DOMAIN-SUFFIX,v.ikanbot.com,国内直连",
    "DOMAIN-SUFFIX,customer.l53.net,自动选择",
    "DOMAIN-SUFFIX,pan666.net,国内直连",
    "DOMAIN-SUFFIX,haowallpaper.com,国内直连",
   
];



// 规则集配置
const ruleConfig = [
    {
        name: "广告集合",
        url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/AdvertisingLite/AdvertisingLite.yaml",
        group: "广告拦截"
        
    },

    {
        name: "Direct.list",
        url:  "https://github.com/qichiyuhub/rule/blob/master/Direct.list",
        group: "国内直连"
        
    },

    {
        name: "AI.list",
        url:  "https://github.com/qichiyuhub/rule/blob/master/AI.list",
        group: "自动选择"
        
    },
    
    {
        name: "Proxy+ProxyLite",
        urls: [
              "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Proxy/Proxy.yaml",
              "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/ProxyLite.list"
        ],
        group: "自动选择"
        
    }
];

function main(config) {
    const newConfig = JSON.parse(JSON.stringify(config));
    
    // 过滤高倍率节点
    const multiplierRegex = /(?:[4-9](?:\.5)?x)/i;
    newConfig.proxies = newConfig.proxies.filter(proxy => !multiplierRegex.test(proxy.name));

    // 构建代理组
    const proxyGroups = [
        {
            "name": "自动选择",
            "icon":"https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/speed.svg", 
            "type": "url-test",
            "url": "http://www.gstatic.com/generate_204",
            "interval": 300,
            "tolerance": 50,
            "proxies": newConfig.proxies.map(p => p.name)

        },
        {
            "name": "手动选择",
            "icon":"https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/speed.svg", 
            "type": "select",
            "proxies": ["自动选择", "DIRECT"]
        },
        {
            "name": "国内直连",
            "icon":"https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/speed.svg", 
            "type": "select",
            "proxies": ["DIRECT"]
        },
        {
            "name": "广告拦截",
            "icon": "https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/ambulance.svg", 
            "type": "select",
            "proxies": ["REJECT"]
        }
    ];

    // 规则配置
    const rules = [];
    
    // 自定义域名
    forceProxyDomains.forEach(domain => {
        rules.push(domain);
    });

    // 自定义规则集
    const ruleProviders = {};
    ruleConfig.forEach(({ name, url, group }) => {
        const providerKey = `${name.toLowerCase()}_rules`;
        ruleProviders[providerKey] = {
            "type": "http",
            "behavior": "classical",
            "url": url,
            "interval": 86400,
            "path": `./rule-providers/${providerKey}.yaml`
        };
        rules.push(`RULE-SET,${providerKey},${group}`);
    });
    
    // 全局配置
    const globalConfig = {
        "global-client-fingerprint": "chrome",
        "tcp-concurrent": true,
        "geox-url": {
            "geoip": "https://ghfast.top/https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/geoip.dat",
            "geosite": "https://github.com/Loyalsoldier/domain-list-custom/releases/latest/download/geosite.dat",
            "mmdb": "https://ghfast.top/https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/Country.mmdb"
        }
    };

    // DNS优化配置
    const dnsConfig = {
        "enable": true,
        "ipv6": true,
        "use-system-hosts": true,
        "respect-rules": true,
        "enhanced-mode": "fake-ip",
        "fake-ip-range": "198.18.0.1/16",
        "fake-ip-filter": [
            "+.lan",
            "+.local"
        ],
        "default-nameserver": [
            "223.5.5.5",
            "120.53.53.53"
        ],
        "nameserver": [
            "https://223.5.5.5/dns-query",
            "https://120.53.53.53/dns-query"
        ],
        // 解析代理节点的DNS，仅支持纯IP
        "proxy-server-nameserver": [
            "https://84.200.69.80/dns-query",
            "https://8.8.8.8/dns-query"
        ],
        "nameserver-policy": {
            "geosite:private,cn": [
                "https://223.5.5.5/dns-query",
                "https://120.53.53.53/dns-query"
            ],
            "geosite:geolocation-!cn,gfw": [
                "https://84.200.69.80/dns-query",
                "https://8.8.8.8/dns-query"
            ]
        }
    };

    // GEO规则
    rules.push(
        // GEOSITE 规则
        "GEOSITE,geolocation-!cn,自动选择",
        "GEOSITE,gfw,自动选择",
        "GEOSITE,onedrive,国内直连",
        "GEOSITE,microsoft@cn,国内直连",
        "GEOSITE,steam@cn,国内直连",
        "GEOSITE,category-games@cn,国内直连",
        "GEOSITE,private,国内直连",
        "GEOSITE,cn,国内直连",
        // GEOIP 规则
        "GEOIP,private,国内直连,no-resolve",
        "GEOIP,cn,国内直连",
        "GEOIP,telegram,自动选择",
        "GEOIP,netflix,自动选择",
        "GEOIP,cloudflare,自动选择",
        "GEOIP,cloudfront,自动选择",
        "GEOIP,facebook,自动选择",
        "GEOIP,fastly,自动选择",
        "GEOIP,google,自动选择",
        "GEOIP,twitter,自动选择",
        "GEOIP,tor,自动选择",
        "MATCH,手动选择"
    );
return {
    ...newConfig,
    ...globalConfig,
    "proxy-groups": proxyGroups,
    "rules": rules,
    "rule-providers": ruleProviders,
    "dns": dnsConfig

    };
}
